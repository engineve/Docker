docker run busybox echo test message

docker run busybox ls 

docker run busybox ping www.daum.net

docker run hello-world

docker ps  // list up running container at the moment

docker ps --all

docker run // create, start

docker create  // container id 

docker start -a container id // print

docker system prune // delete stopped containers, cache, dangling images etc

docker logs <container-id> // print out already ran process

docker stop <container-id> // try to stop, after 10 seconds docker kill the container

docker kill <container-id> // immediately stop

docker exec -it <container-id> sh  // starts # shell

docker run -it <image> sh // using shell, starts a image

Dockerfile -> docker build .   // . is build context


docker build -t <docker-id>/<project-name>:latest  // tagging the image you made

// --> docker run <docker-id>/<project-name>

docker run -p <port> : <port in container> <image-id> // port mapping
docker run -it -p <port> : <port in container> <image-id>
docker run [-it] -p <port> : <port in container> -v /<WORKDIR>/node_modules -v $(pwd):/<WORKDIR> <image-id>  // <WORKDIR> references to PWD except node_modules

docker-compose up // docker run <image>

docker-compose up --build // docker build . and docker run <image>

docker-compose run <service-name on docker-compose.yml> sh -c 'django-admin.py startproject <project-name> app .'  // using shell, put command after 'sh'


docker stop <container-id>

docker-compose up -d // run containers in background

docker-compose down // stop containers

docker-compose ps // search docker-compose.yml on current directory and find running containers that belong to the file


docker run --name <mysql-container> -e MYSQL_ROOT_PASSWORD=<password> -d mysql:tag  // tag is for mysql version

docker run --name <mysql-container> -v <host-volume>:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=<password> -d mysql:tag

docker build -f Dockerfile.dev // -f is for specific file to build


docker-compose run --rm <app-name> sh -c <commands> // in django, after commands, delete container
docker-compose run --rm <command> // after command, delete container to save some space